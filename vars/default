#!/bin/bash

# Global vars

# Kubernetes version to install
KUBERNETES_VERSION="v1.4.3"

# Docker
DOCKER="/usr/bin/docker"
DOCKER_DEFAULT="/etc/default/docker"

# Docker images
HYPERKUBE_IMAGE_REPO="gcr.io/google_containers/hyperkube"

# hyperkube settings
HYPERKUBE_BIN_SOURCE="https://storage.googleapis.com/kubernetes-release/release/${KUBERNETES_VERSION}/bin/linux/amd64/hyperkube"
HYPERKUBE="/usr/bin/hyperkube"

# kubectl settings
KUBECTL_BIN_SOURCE="https://storage.googleapis.com/kubernetes-release/release/${KUBERNETES_VERSION}/bin/linux/amd64/kubectl"
KUBECTL="/usr/bin/kubectl"

# etcd settings
ETCD_NAME="etcd"
ETCD_VERSION="v2.3.7"
ETCD_CLIENT_PORT="2379"
ETCD_PEER_PORT="2380"
ETCD_IMAGE="quay.io/coreos/etcd:${ETCD_VERSION}"
ETCD_SERVERS="http://127.0.0.1:$ETCD_CLIENT_PORT"        # Server endpoints for etcd clients
ETCD_PEER_SERVERS="http://127.0.0.1:$ETCD_PEER_PORT"     # Server endpoints for etcd peers

# flannel settings
FLANNEL="/usr/bin/flanneld"
FLANNEL_ENV="/run/flannel/subnet.env"
FLANNEL_VERSION="0.6.1"

# Master network config
PRIVATE_MASTER_IF=eth1
PRIVATE_MASTER_HOST="$(ip -4 a s $PRIVATE_MASTER_IF | grep inet | awk '{print $2}' | cut -f1 -d"/")"

# Node network config
# Should be cluster-accessible DNS name, IP, or LB address (if HA) of k8s
# Master(s), but using PRIVATE_MASTER_HOST here since master & node are co-located
MASTER_HOST="https://$PRIVATE_MASTER_HOST"

# Cluster Network settings
SERVICE_CIDR="10.32.0.0/24"         # CIDR for all k8s Services
APISERVER_SERVICE_IP="10.32.0.1"    # Expected k8s Service IP of kube-apiserver // used as SAN in TLS cert generation
DNS_SERVICE_IP="10.32.0.10"         # Expected k8s Service IP of kube-dns
PODS_CIDR="10.33.0.0/16"            # CIDR for all k8s Pods
DNS_DOMAIN="cluster.local"          # DNS Domain for k8s cluster

# Paths
TEMPLATES_DIR="./templates"
ADDONS_DIR="./addons"
CERT_DIR="/etc/kubernetes/ssl"
CA_CERTS="/usr/share/ca-certificates"
